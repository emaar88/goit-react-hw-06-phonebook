{"version":3,"sources":["components/Filter/Filter.module.css","components/Contact/Contact.module.css","redux/actions/contactActions.js","components/ContactForm/ContactForm.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","redux/reducers/contactReducers.js","redux/store/index.js","index.js","components/ContactForm/ContactForm.module.css","components/App.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","contact","id","uuidv4","deleteContact","onRename","ContactForm","state","handleChange","e","target","value","setState","resetForm","handleSubmit","preventDefault","props","onAddTask","alert","this","className","classes","container","onSubmit","form","type","inputText","placeholder","onChange","button","Component","mapDispatchToProps","contactsActions","connect","Contact","onDeleteContact","onClick","contacts","items","filter","normalizedFilter","toLowerCase","includes","length","map","li","formFilter","App","titleName","minTitleName","createReducer","action","combineReducers","globalState","configureStore","reducer","rootReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.171bf103.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1j772\",\"formFilter\":\"Filter_formFilter__1yuCe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Contact_button__3M8j1\"};","// import { ADD_CONTACT, DELETE_CONTACT } from \"../types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"ADD_CONTACT\", (name, number) => ({\r\n  payload: {\r\n    contact: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction(\"DELETE_CONTACT\");\r\nconst onRename = createAction(\"RENAME_CONTACT\");\r\n\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n  onRename,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./ContactForm.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/actions/contactActions\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  resetForm = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.name !== \"\" && this.state.number !== \"\") {\r\n      this.props.onAddTask(this.state.name, this.state.number);\r\n    } else alert(\"Введено пустое значение!\");\r\n\r\n    this.resetForm();\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <div className={classes.container}>\r\n        <form onSubmit={this.handleSubmit} className={classes.form}>\r\n          <label>\r\n            Name\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id={name}\r\n              className={classes.inputText}\r\n              placeholder=\"Input name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Number\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"number\"\r\n              id={number}\r\n              className={classes.inputText}\r\n              placeholder=\"Input phone number\"\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button className={classes.button} type=\"submit\">\r\n            Add Contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onAddTask: contactsActions.addContact,\r\n};\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./Contact.module.css\";\r\n\r\nconst Contact = ({ name, number, onDeleteContact }) => {\r\n  return (\r\n    <>\r\n      {name}: {number}\r\n      <button onClick={onDeleteContact} className={classes.button}>\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport Contact from \"../Contact/Contact\";\r\nimport contactsActions from \"../../redux/actions/contactActions\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <div className={classes.container}>\r\n    <ul>\r\n      {contacts.length > 0 ? (\r\n        contacts.map(({ id, name, number }) => (\r\n          <li className={classes.li}>\r\n            <Contact\r\n              name={name}\r\n              number={number}\r\n              onDeleteContact={() => onDeleteContact(id)}\r\n            />\r\n          </li>\r\n        ))\r\n      ) : (\r\n        <li className={classes.alert}>No have contacts!</li>\r\n      )}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { items, filter } = state.contacts;\r\n  const normalizedFilter = filter.toLowerCase();\r\n  const visibleContacts = items.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase(normalizedFilter))\r\n  );\r\n  return {\r\n    contacts: visibleContacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onDeleteContact: contactsActions.deleteContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/actions/contactActions\";\r\nimport classes from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onRename }) => {\r\n  return (\r\n    <>\r\n      <div className={classes.container}>\r\n        <label>Find contacts by name</label>\r\n        <input\r\n          className={classes.formFilter}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={(e) => onRename(e.target.value)}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onRename: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onRename: contactsActions.onRename,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import classes from \"./App.module.css\";\n\nimport React from \"react\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\n\nexport default function App() {\n  return (\n    <>\n      <h1 className={classes.titleName}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={classes.minTitleName}>Contacts</h2>\n      <Filter />\n      <h2 className={classes.minTitleName}>Contacts List</h2>\n      <ContactList />\n    </>\n  );\n}\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport contactsActions from \"../actions/contactActions\";\r\n\r\nconst addContact = (state, action) => [...state, action.payload.contact];\r\nconst deleteContactForList = (state, action) =>\r\n  state.filter((contact) => contact.id !== action.payload);\r\n\r\nconst items = createReducer([], {\r\n  [contactsActions.addContact]: addContact,\r\n  [contactsActions.deleteContact]: deleteContactForList,\r\n});\r\nconst filter = createReducer(\"\", {\r\n  [contactsActions.onRename]: (state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n// import { devToolsEnhancer } from \"redux-devtools-extension\";\r\nimport rootReducer from \"../reducers/contactReducers\";\r\n\r\nconst globalState = configureStore({\r\n  reducer: {\r\n    contacts: rootReducer,\r\n  },\r\n});\r\n\r\nexport default globalState;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport globalState from \"./redux/store/index\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={globalState}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputText\":\"ContactForm_inputText__2AWgj\",\"button\":\"ContactForm_button__3DA7G\",\"container\":\"ContactForm_container__1J12k\",\"form\":\"ContactForm_form__3Bucf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleName\":\"App_titleName__1DizJ\",\"minTitleName\":\"App_minTitleName__bUStg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__3qzQG\",\"li\":\"ContactList_li__19r44\",\"alert\":\"ContactList_alert__2RNN3\"};"],"sourceRoot":""}